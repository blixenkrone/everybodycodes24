package main

import (
	"fmt"
	"strings"

	"github.com/davecgh/go-spew/spew"
)

func main() {
	spew.Dump(Potions("", 3))
}

var (
	monsterPotions = [256]int8{
		'A': 0,
		'B': 1,
		'C': 3,
		'D': 5,
		'x': -1, // Using -1 to indicate invalid monster
	}

	extraPotions = [4]uint16{0, 0, 2, 6}
)

func Potions(input string, groupSize int) uint16 {
	if len(input) == 0 || groupSize == 0 {
		return 0
	}

	trimmed := strings.TrimSpace(input)
	if len(trimmed) == 0 {
		return 0
	}

	bytes := make([]byte, 0, len(trimmed))
	bytes = append(bytes, trimmed...)

	var totalPotions uint16

	for i := 0; i < len(bytes); i += groupSize {
		end := i + groupSize
		if end > len(bytes) {
			end = len(bytes)
		}
		totalPotions += groupPotionsCount(bytes[i:end])
	}

	return totalPotions
}

func groupPotionsCount(group []byte) uint16 {
	var sum uint16
	var count uint16

	for _, monster := range group {
		potions := monsterPotions[monster]
		if potions >= 0 {
			sum += uint16(potions)
			count++
		}
	}

	if count < uint16(len(extraPotions)) {
		return sum + extraPotions[count]
	}
	panic(fmt.Sprintf("Invalid count: %d", count))
}
